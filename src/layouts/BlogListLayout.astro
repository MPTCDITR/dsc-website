---
import { getArticleUrl } from "@/lib/route";

import BaseLayout from "./BaseLayout.astro";
import type { SupportedLanguage } from "@/i18n/ui";
import type { CollectionEntry } from "astro:content";

interface Props {
  title: string;
  description: string;
  canonicalURL: string;
  articles: CollectionEntry<"articles">[];
  image?: string;
}

const { title, description, canonicalURL, articles, image } = Astro.props;
---

<BaseLayout
  title={title}
  description={description}
  canonicalURL={canonicalURL}
  image={image}
  type="website"
>
  <Fragment slot="head">
    <script
      is:inline
      type="application/ld+json"
      set:html={JSON.stringify({
        "@context": "https://schema.org",
        "@type": "CollectionPage",
        mainEntityOfPage: {
          "@type": "WebPage",
          "@id": Astro.url,
        },
        name: title,
        description: description,
        url: Astro.url,
        image: new URL(image || "/default-og-image.jpg", Astro.url).toString(),
        isPartOf: {
          "@type": "WebSite",
          name: "Digital Security Committee",
          url: Astro.site,
        },
        about: {
          "@type": "Thing",
          name: "News Articles",
        },
        hasPart: articles.map((article) => ({
          "@type": "NewsArticle",
          headline: article.data.title,
          url: new URL(
            getArticleUrl(
              article.slug,
              Astro.currentLocale as SupportedLanguage,
            ),
            Astro.site,
          ).toString(),
          datePublished: new Date(article.data.date).toISOString(),
          image: article.data.image
            ? new URL(article.data.image.src, Astro.site).toString()
            : undefined,
          author: {
            "@type": "Organization",
            name: "Digital Security Committee",
            url: Astro.site,
          },
        })),
      })}
    />
  </Fragment>

  <slot />
</BaseLayout>
