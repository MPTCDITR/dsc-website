---
import { formatDate, toISOString } from "@/lib/date-helper";
import { getArticleUrl } from "@/lib/route";

import Main from "@/components/Main.astro";
import ProseWrapper from "@/components/ProseWrapper.astro";
import TextElement from "@/components/TextElement";

import type { SupportedLanguage } from "@/i18n/ui";
import Layout from "@/layouts/Layout.astro";
import { Image } from "astro:assets";
import { getCollection } from "astro:content";

export async function getStaticPaths() {
  const pages = await getCollection("articles");

  return pages.map((page) => {
    const [lang, slug] = page.slug.split("/");
    return { params: { lang, slug }, props: { page } };
  });
}

const { page } = Astro.props;
const {
  params: { lang },
} = Astro;
const { Content } = await page.render();

const publicationDate = new Date(page.data.date);

const transition = getArticleUrl(page.slug, lang as SupportedLanguage);
---

<Layout
  title={page.data.title}
  description={page.body.slice(0, 160)}
  image={page.data.image.src}
  canonicalURL={new URL(Astro.url.pathname, Astro.site).toString()}
  type="article"
  publishDate={publicationDate}
>
  <Main>
    <ProseWrapper>
      <header>
        <figure role="none">
          <Image
            src={page.data.image}
            alt={page.data.title}
            widths={[240, 540, 720, 1080, 1440]}
            sizes="(max-width: 360px) 240px, (max-width: 720px) 540px, (max-width: 1080px) 720px, (max-width: 1440px) 1080px, 1440px"
            class="rounded-lg"
            loading="eager"
            quality={80}
            transition:name={`image-${transition}`}
          />
          <figcaption class="sr-only">
            {page.data.title}
          </figcaption>
        </figure>
        <TextElement
          variant="heading"
          className="text-center"
          transitionName={`title-${transition}`}
        >
          {page.data.title}
        </TextElement>
        <div class="my-4 flex items-center justify-between">
          <span>Digital Security Committee</span>
          <time
            datetime={toISOString(publicationDate)}
            transition:name={`date-${transition}`}
            class="text-right text-mptc-secondary-foreground"
          >
            {formatDate(publicationDate, lang as SupportedLanguage)}
          </time>
        </div>
      </header>
      <section transition:name={`body-${transition}`}>
        <Content />
      </section>
    </ProseWrapper>
  </Main>
</Layout>
