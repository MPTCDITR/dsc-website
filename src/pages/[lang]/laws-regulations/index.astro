---
import { Separator } from "@/components/ui/separator";
import DirectiveCardList from "@/components/directive/DirectiveCardList.astro";
import Main from "@/components/Main.astro";
import TextElement from "@/components/TextElement";

import { DIRECTIVE_TYPES, type DirectiveType } from "@/content/content.type";
import { languages, type SupportedLanguage } from "@/i18n/ui";
import { useTranslations } from "@/i18n/utils";
import BaseLayout from "@/layouts/BaseLayout.astro";
import { getCollection, type CollectionEntry } from "astro:content";

export async function getStaticPaths() {
  return Object.keys(languages).map((lang) => ({
    params: { lang },
  }));
}

const lang = Astro.params.lang as SupportedLanguage;
const allDirectives = await getCollection("directives");

function filterDirectives(
  directives: CollectionEntry<"directives">[],
  type: DirectiveType,
  lang: SupportedLanguage,
): CollectionEntry<"directives">[] {
  if (type === "decision") {
    return [];
  }
  return directives.filter(
    (directive) => directive.data.lang === lang && directive.data.type === type,
  );
}

const directiveMapping = [
  { type: DIRECTIVE_TYPES.ROYAL_DECREE, title: "royalDecrees" },
  { type: DIRECTIVE_TYPES.SUB_DECREE, title: "subDecrees" },
  { type: DIRECTIVE_TYPES.DECISION, title: "decisions" },
] as const;

const directiveTypes = directiveMapping.map(({ type, title }) => ({
  type,
  title,
}));
const t = useTranslations(lang);
const title = t("legislations");
---

<BaseLayout title={title}>
  <Main>
    <section aria-label={title}>
      <header>
        <TextElement variant="heading" className="text-center text-primary">
          {title}
        </TextElement>
        <Separator />
      </header>

      {
        directiveTypes.map(({ type, title }) => (
          <section aria-label={title}>
            <TextElement variant="subheading" className="text-primary">
              {t(title)}
            </TextElement>
            <DirectiveCardList
              directives={filterDirectives(allDirectives, type, lang)}
              lang={lang}
            />
          </section>
        ))
      }
    </section>
  </Main>
</BaseLayout>
